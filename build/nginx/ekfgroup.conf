proxy_cache_path /var/cache/nginx/images levels= keys_zone=thumbs:50m inactive=24h max_size=2G;
proxy_cache_path  /var/cache/nginx/ekfgroup levels=1:2 keys_zone=nuxt-cache-ekfgroup:25m max_size=1g inactive=60m use_temp_path=off;

map $sent_http_content_type $expires {
    "text/html"                 1h; # set this to your needs
    "text/html; charset=utf-8"  1h; # set this to your needs
    default                     1d; # set this to your needs
}

map $cookie_region $redirect_cookie {
    ru 1;
    en 2;
    ae 3;
    default 0;
}

map "$http_host$uri" $is_ekfgroup_host {
    "ekfgroup.com/"     1;
    "www.ekfgroup.com/" 1;
    default            0;
}

map $geoip2_data_country_iso_code $redirect_to_ru {
    ~^(RU|AZ|AM|BY|KZ|KG|MD|TJ|UZ)$ 1;
    default                        0;
}

map $geoip2_data_country_iso_code $redirect_to_ae {
    ~^(DZ|AO|BJ|BW|BF|BI|GA|GM|GH|GN|GW|DJ|EG|ZM|EH|ZW|CV|CM|KE|KM|CG|CD|CI|LS|LY|LR|MU|MR|MG|YT|MW|ML|MA|MZ|NA|NE|NG|RE|RW|ST|SH|SN|SC|SO|SD|SL|TZ|TG|TN|UG|CF|TD|GQ|ER|SZ|ET|ZA|SS|BH|EG|IL|JO|IQ|YE|QA|CY|KW|LB|AE|OM|PS|SA|SY|SD|SG|TR)$ 1;
    default                        0;
}

map "$is_ekfgroup_host$redirect_to_ru$redirect_cookie" $match_redirect_to_ru {
    100 2;
    102 2;
    112 2;
    default 0;
}

map "$is_ekfgroup_host$redirect_to_ae$redirect_cookie" $match_redirect_to_ae {
    110 1;
    113 1;
    103 1;
    default 0;
}

server {
    listen 443 ssl;

    ssl_certificate /ssl/ekfgroup.com.crt;
    ssl_certificate_key /ssl/ekfgroup.com.key;

    server_name www.ekfgroup.com;
    return 301 https://ekfgroup.com$request_uri;
}

server {
    location /ae {
        rewrite ^/ae(.*) /$1 break;
        proxy_pass https://78.155.208.20$1;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }


    include /etc/nginx/conf.d/ekfgroup.com.rewrites;
    listen 443 ssl http2;

    rewrite_log on;
    ssl_certificate_key /ssl/ekfgroup.com.key;
    ssl_certificate /ssl/ekfgroup.com.crt;

    error_log            /var/log/nginx/ekfgroup.com.error.log;
    access_log         /var/log/nginx/ekfgroup.com.access.log;

    ssl_session_cache  builtin:1000  shared:SSL:10m;
    ssl_session_tickets on;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;

    server_name ekfgroup.com www.ekfgroup.com ekfgroup-docker.local;    # setup your domain here

    gzip            on;
    gzip_types      text/plain application/xml application/json text/css application/javascript;
    gzip_min_length 1000;

    charset utf-8;

    location = /uploads {
       return 404;
    }

    rewrite ^/(.*)/$ /$1 permanent;

    location / {
        set $frame_options '';
        if ($http_referer !~ '^https?:\/\/([^\/]+\.)?(ekfgroup\.com|webvisor\.com|metri[ck]a\.yandex\.(com|ru|by|com\.tr))\/'){
            set $frame_options 'SAMEORIGIN';
        }

        expires 0;
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Cache-Status $upstream_cache_status;
        add_header X-Country-Code "$geoip2_data_country_iso_code" always;
        add_header X-City-Name "$geoip2_data_city_name" always;

	      add_header Cache-Control "no-cache, no-store, must-revalidate";
	      add_header Pragma no-cache;

	      if ($uri = "/ru") {
	          add_header Set-Cookie "region=ru; domain=.ekfgroup.com; Max-Age=315532800";
	      }

        proxy_redirect                      off;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_ignore_headers        Cache-Control;
        proxy_http_version          1.1;
        proxy_read_timeout          240s;
        proxy_connect_timeout       240s;
        proxy_pass                  http://ekfgroup:8009; # set the address of the Node.js instance here
        # proxy_cache                 nuxt-cache-ekfgroup;
        # proxy_cache_valid           200 302  60m; # set this to your needs
        # proxy_cache_valid           404      1m;  # set this to your needs
        # proxy_cache_bypass          $http_pragma;
        # proxy_cache_revalidate      on;
        # proxy_cache_min_uses        2;
        # proxy_cache_lock            on;
        # proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        # proxy_cache_key             $uri$is_args$args$cookie_CART_ID$cookie_CART_UPDATED_AT$geoip2_data_country_iso_code;

    }


    location ~ ^/(?:\d+|-)x(?:\d+|-)|small/ {
        proxy_pass http://127.0.0.1:9000;
        proxy_pass_request_headers off;
        proxy_cache thumbs;
        proxy_cache_valid  200      24h;
        proxy_cache_valid  404 415  1m;
        access_log off;
        expires 30d;
    }
}

server {
    if ($host = www.ekfgroup.com) {
        return 301 http://$host$request_uri;
    }

    if ($host = ekfgroup.com) {
        return 301 https://$host$request_uri;
    }

    listen 80;
    server_name www.ekfgroup.com ekfgroup.com ekfgroup-docker.local;
    return 404;
}

server {
    listen 9000;
    root /usr/src/app/static;

    if ($uri ~ ^/(\d+|-)x(\d+|-)/) {
        set $w $1;
        set $h $2;
    }

    location ~* ^/(?:\d+|-)x(?:\d+|-)/.*\.(?:jpg|jpeg|gif|png)$ {
        rewrite ^/[\w\d-]+/(.*)$ /$1;
        image_filter resize $w $h;
        image_filter_jpeg_quality 100;
        image_filter_webp_quality 100;
        image_filter_buffer 20M;
        error_page 415 404 = /empty_image;
        break;
    }

    location = /empty_image {
        try_files $uri /uploads/main_logo.png;
    }

}

